# Generated by Django 5.0.2 on 2024-03-04 19:13

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('rest_api', '0002_telegramuser'),
    ]

    operations = [
        migrations.CreateModel(
            name='Diameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(unique=True, verbose_name='Диаметр')),
            ],
            options={
                'verbose_name': 'Диаметр',
                'verbose_name_plural': 'Диаметры',
                'db_table': 'diameters',
            },
        ),
        migrations.CreateModel(
            name='Height',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(unique=True, verbose_name='Высота')),
            ],
            options={
                'verbose_name': 'Высота',
                'verbose_name_plural': 'Высоты',
                'db_table': 'heights',
            },
        ),
        migrations.CreateModel(
            name='Width',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(unique=True, verbose_name='Ширина')),
            ],
            options={
                'verbose_name': 'Ширина',
                'verbose_name_plural': 'Ширины',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_processed', models.BooleanField(default=False, verbose_name='Обработан')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.telegramuser', verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'orders',
            },
        ),
        migrations.CreateModel(
            name='Tire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=100, verbose_name='Бренд, модель')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('season', models.CharField(choices=[('W', 'Зима'), ('S', 'Лето'), ('A', 'Всесезонные')], max_length=1, verbose_name='Сезонность')),
                ('load_index', models.IntegerField(blank=True, null=True, verbose_name='Индекс нагрузки')),
                ('speed_rating', models.CharField(blank=True, max_length=3, null=True, verbose_name='Индекс скорости')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('discount_percentage', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Скидка, %')),
                ('discounted_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Цена со скидкой')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('image', models.ImageField(blank=True, null=True, upload_to='tires/', verbose_name='Изображение')),
                ('feedback', models.URLField(blank=True, max_length=255, null=True, verbose_name='Отзывы')),
                ('image_telegram_id', models.CharField(blank=True, max_length=255, null=True, verbose_name='ID изображения в Telegram')),
                ('diameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.diameter', verbose_name='Диаметр')),
                ('height', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.height', verbose_name='Высота')),
                ('width', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.width', verbose_name='Ширина')),
            ],
            options={
                'verbose_name': 'Шина',
                'verbose_name_plural': 'Шины',
                'db_table': 'tires',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Количество')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='rest_api.order', verbose_name='Заказ')),
                ('tire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.tire', verbose_name='Шина')),
            ],
            options={
                'verbose_name': 'Элемент заказа',
                'verbose_name_plural': 'Элементы заказа',
                'db_table': 'orders_elements',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.telegramuser', verbose_name='Пользователь')),
                ('tire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_api.tire', verbose_name='Шина')),
            ],
            options={
                'verbose_name': 'Элемент корзины',
                'verbose_name_plural': 'Элементы корзины',
                'db_table': 'basket_items',
            },
        ),
        migrations.DeleteModel(
            name='Todo',
        ),
    ]
